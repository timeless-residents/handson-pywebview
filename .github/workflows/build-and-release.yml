name: Build and Release PyWebview App

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: macos-latest
            asset_name: launcher-macos.zip
          - os: windows-latest
            asset_name: launcher-windows.zip

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies (Common)
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pywebview
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          if [ -f requirements-macos.txt ]; then pip install -r requirements-macos.txt; fi
        shell: bash

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          if (Test-Path -Path requirements-windows.txt -PathType Leaf) {
            pip install -r requirements-windows.txt
          }
        shell: pwsh

      - name: Build with PyInstaller (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          # バイトコードの最適化レベルを設定し、docstringを除去
          pyinstaller --clean --onedir --windowed --noconfirm --add-data "showroom:showroom" --key="YOUR_SECRET_KEY" launcher.py
          ls -la dist/
        shell: bash

      - name: Build with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --clean --onedir --windowed --noconfirm --add-data "showroom;showroom" --key="YOUR_SECRET_KEY" launcher.py
          dir dist

      - name: Create ZIP archive (macOS)
        if: matrix.os == 'macos-latest' && success()
        run: |
          cd dist
          zip -r ../${{ matrix.asset_name }} launcher.app

      - name: Create ZIP archive (Windows)
        if: matrix.os == 'windows-latest' && success()
        run: |
          Compress-Archive -Path dist/launcher -DestinationPath ${{ matrix.asset_name }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') && success()
        with:
          files: ${{ matrix.asset_name }}
          name: "PyWebview Launcher v${{ github.ref_name }}"
          body: |
            PyWebview Launcher Application

            ## インストール方法
            - Windows: ZIPを解凍し、フォルダ内の `launcher.exe` を実行
            - macOS: ZIPを解凍し、`launcher.app` を右クリック→「開く」→「開く」
